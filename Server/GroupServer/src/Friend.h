/* Generated by Together */

#ifndef FRIEND_H
#define FRIEND_H
#include "Invitation.h"
//cChar	gc_standard_group[]="ÎÒµÄºÃÓÑ";
extern const cChar*	gc_standard_group;

class Friend : public Invitation
{
public:
	PtInviter	FrndBeginInvited(Player * inviter){return Invitation::BeginInvited(inviter);}
	PtInviter	FrndEndInvited	(Player * inviter){return Invitation::EndInvited(inviter);}
	PtInviter	FrndEndInvited	(uLong    atorID ){return Invitation::EndInvited(atorID);}
	Invited	*	FrndFindInvitedByInviterChaID(uLong atorID){return Invitation::FindInvitedByInviterChaID(atorID);}
protected:
	Friend(){}
	~Friend(){}
private:
	virtual	void FrndInvitedCheck(Invited	*invited)=0;
	long	GetInvitedMax();
	void	InvitedCheck(Invited	*invited);
public:
	InterLockedLong m_CurrFriendNum;
};
#endif //FRIEND_H
